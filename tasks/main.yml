---
# tasks file for ansible-role-cfn-ecs-service
- name: Create build directory if not extant
  file:
    state: directory
    dest: build

- name: Template the ecs stack
  template:
    src: ecs_service.json.j2
    dest: "build/ecs_service.{{ ecs_service_stack_name }}.json"

- name: Create or remove cloudformation stack
  cloudformation:
    template_parameters:
      EcsTask: "{{ ecs_service_task }}"
      ECSCluster: "{{ ecs_service_cluster_name }}"
      ECSServiceRole: "{% if ecs_service_iam_role is not defined and (ecs_service_elb_name is defined or ecs_service_elb_container_mappings is defined) %}{{ iam_role_cf_output.stack_outputs.RoleName }}{% else %}{{ ecs_service_iam_role|default('') }}{% endif %}"
      ECSELBName: "{{ ecs_service_elb_name|default('') }}"
      ContainerName: "{{ ecs_service_container_name|default('') }}"
      ContainerPort: "{{ ecs_service_container_port|default(0) }}"
      DesiredCount: "{{ ecs_service_desired_count|default(1) }}"
      DeploymentConfigurationMinHealthyPercent: "{{ ecs_service_deploy_min_healthy_percent }}"     
      DeploymentConfigurationMaxPercent: "{{ ecs_service_deploy_max_percent }}"     
    stack_name: "{{ ecs_service_stack_name }}"
    region: "{{ region }}"
    template: "build/ecs_service.{{ ecs_service_stack_name }}.json"
    security_token: "{{ lookup('env','AWS_SESSION_TOKEN')|default(omit, true) }}"
    tags: "{{ ecs_service_tags }}"
    state: "{{ ecs_service_stack_state }}"
  register: ecs_service_cf_output

- name: cleanup the iam role 
  cloudformation:
    stack_name: "{{ ecs_service_iam_role_stack_name }}"
    state: "absent"
    region: "{{ region }}"
    security_token: "{{ ansible_security_token | default(omit, true) }}"
  when: ecs_service_iam_role_cleanup and
        ecs_service_stack_state == 'absent' and
        ecs_service_iam_role is not defined
